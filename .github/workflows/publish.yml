name: Publish to NPM

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major
        - prerelease
      tag:
        description: 'NPM tag (latest, beta, alpha, etc.)'
        required: true
        default: 'latest'
        type: string

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Configure Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'

    - name: Install dependencies
      run: npm ci

    - name: Run linter (if available)
      run: npm run lint --if-present

    - name: Run type check (if available)
      run: npm run typecheck --if-present

    - name: Run full test suite
      run: npm run test:full

    - name: Bump version
      run: |
        npm version ${{ inputs.version_type }} --no-git-tag-version
        echo "NEW_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

    - name: Update CLAUDE.md with version info
      run: |
        echo "" >> CLAUDE.md
        echo "## Version ${{ env.NEW_VERSION }}" >> CLAUDE.md
        echo "Published on $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> CLAUDE.md

    - name: Commit version bump
      run: |
        git add package.json package-lock.json CLAUDE.md
        git commit -m "chore: bump version to ${{ env.NEW_VERSION }}"
        git tag "v${{ env.NEW_VERSION }}"

    - name: Push changes and tags
      run: |
        git push origin master
        git push origin "v${{ env.NEW_VERSION }}"

    - name: Publish to NPM
      run: npm publish --tag ${{ inputs.tag }}
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.NEW_VERSION }}
        release_name: Release v${{ env.NEW_VERSION }}
        body: |
          ## Changes
          - Version ${{ env.NEW_VERSION }} of activemq-mcp-server
          - Published to NPM with tag: ${{ inputs.tag }}

          ## Installation
          ```bash
          npm install -g activemq-mcp-server@${{ inputs.tag }}
          # or
          npx activemq-mcp-server@${{ inputs.tag }}
          ```
        draft: false
        prerelease: ${{ inputs.tag != 'latest' }}